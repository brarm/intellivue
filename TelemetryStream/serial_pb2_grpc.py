# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import serial_pb2 as serial__pb2


class SerialServerStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SerialOpen = channel.unary_unary(
        '/serial.SerialServer/SerialOpen',
        request_serializer=serial__pb2.SerialPort.SerializeToString,
        response_deserializer=serial__pb2.PortResponse.FromString,
        )
    self.SerialSend = channel.unary_unary(
        '/serial.SerialServer/SerialSend',
        request_serializer=serial__pb2.SerialMessage.SerializeToString,
        response_deserializer=serial__pb2.Empty.FromString,
        )
    self.SerialReceive = channel.unary_unary(
        '/serial.SerialServer/SerialReceive',
        request_serializer=serial__pb2.Empty.SerializeToString,
        response_deserializer=serial__pb2.SerialMessage.FromString,
        )
    self.SerialClose = channel.unary_unary(
        '/serial.SerialServer/SerialClose',
        request_serializer=serial__pb2.Empty.SerializeToString,
        response_deserializer=serial__pb2.Empty.FromString,
        )


class SerialServerServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def SerialOpen(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SerialSend(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SerialReceive(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SerialClose(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SerialServerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SerialOpen': grpc.unary_unary_rpc_method_handler(
          servicer.SerialOpen,
          request_deserializer=serial__pb2.SerialPort.FromString,
          response_serializer=serial__pb2.PortResponse.SerializeToString,
      ),
      'SerialSend': grpc.unary_unary_rpc_method_handler(
          servicer.SerialSend,
          request_deserializer=serial__pb2.SerialMessage.FromString,
          response_serializer=serial__pb2.Empty.SerializeToString,
      ),
      'SerialReceive': grpc.unary_unary_rpc_method_handler(
          servicer.SerialReceive,
          request_deserializer=serial__pb2.Empty.FromString,
          response_serializer=serial__pb2.SerialMessage.SerializeToString,
      ),
      'SerialClose': grpc.unary_unary_rpc_method_handler(
          servicer.SerialClose,
          request_deserializer=serial__pb2.Empty.FromString,
          response_serializer=serial__pb2.Empty.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'serial.SerialServer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
