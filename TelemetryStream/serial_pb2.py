# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: serial.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='serial.proto',
  package='serial',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x0cserial.proto\x12\x06serial\"\x07\n\x05\x45mpty\"\x1d\n\rSerialMessage\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\t\"\x1a\n\nSerialPort\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\t\"\x1c\n\x0cPortResponse\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\t2\xe6\x01\n\x0cSerialServer\x12\x38\n\nSerialOpen\x12\x12.serial.SerialPort\x1a\x14.serial.PortResponse\"\x00\x12\x34\n\nSerialSend\x12\x15.serial.SerialMessage\x1a\r.serial.Empty\"\x00\x12\x37\n\rSerialReceive\x12\r.serial.Empty\x1a\x15.serial.SerialMessage\"\x00\x12-\n\x0bSerialClose\x12\r.serial.Empty\x1a\r.serial.Empty\"\x00\x62\x06proto3')
)




_EMPTY = _descriptor.Descriptor(
  name='Empty',
  full_name='serial.Empty',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=24,
  serialized_end=31,
)


_SERIALMESSAGE = _descriptor.Descriptor(
  name='SerialMessage',
  full_name='serial.SerialMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='data', full_name='serial.SerialMessage.data', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=33,
  serialized_end=62,
)


_SERIALPORT = _descriptor.Descriptor(
  name='SerialPort',
  full_name='serial.SerialPort',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='data', full_name='serial.SerialPort.data', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=64,
  serialized_end=90,
)


_PORTRESPONSE = _descriptor.Descriptor(
  name='PortResponse',
  full_name='serial.PortResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='data', full_name='serial.PortResponse.data', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=92,
  serialized_end=120,
)

DESCRIPTOR.message_types_by_name['Empty'] = _EMPTY
DESCRIPTOR.message_types_by_name['SerialMessage'] = _SERIALMESSAGE
DESCRIPTOR.message_types_by_name['SerialPort'] = _SERIALPORT
DESCRIPTOR.message_types_by_name['PortResponse'] = _PORTRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Empty = _reflection.GeneratedProtocolMessageType('Empty', (_message.Message,), {
  'DESCRIPTOR' : _EMPTY,
  '__module__' : 'serial_pb2'
  # @@protoc_insertion_point(class_scope:serial.Empty)
  })
_sym_db.RegisterMessage(Empty)

SerialMessage = _reflection.GeneratedProtocolMessageType('SerialMessage', (_message.Message,), {
  'DESCRIPTOR' : _SERIALMESSAGE,
  '__module__' : 'serial_pb2'
  # @@protoc_insertion_point(class_scope:serial.SerialMessage)
  })
_sym_db.RegisterMessage(SerialMessage)

SerialPort = _reflection.GeneratedProtocolMessageType('SerialPort', (_message.Message,), {
  'DESCRIPTOR' : _SERIALPORT,
  '__module__' : 'serial_pb2'
  # @@protoc_insertion_point(class_scope:serial.SerialPort)
  })
_sym_db.RegisterMessage(SerialPort)

PortResponse = _reflection.GeneratedProtocolMessageType('PortResponse', (_message.Message,), {
  'DESCRIPTOR' : _PORTRESPONSE,
  '__module__' : 'serial_pb2'
  # @@protoc_insertion_point(class_scope:serial.PortResponse)
  })
_sym_db.RegisterMessage(PortResponse)



_SERIALSERVER = _descriptor.ServiceDescriptor(
  name='SerialServer',
  full_name='serial.SerialServer',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=123,
  serialized_end=353,
  methods=[
  _descriptor.MethodDescriptor(
    name='SerialOpen',
    full_name='serial.SerialServer.SerialOpen',
    index=0,
    containing_service=None,
    input_type=_SERIALPORT,
    output_type=_PORTRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SerialSend',
    full_name='serial.SerialServer.SerialSend',
    index=1,
    containing_service=None,
    input_type=_SERIALMESSAGE,
    output_type=_EMPTY,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SerialReceive',
    full_name='serial.SerialServer.SerialReceive',
    index=2,
    containing_service=None,
    input_type=_EMPTY,
    output_type=_SERIALMESSAGE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SerialClose',
    full_name='serial.SerialServer.SerialClose',
    index=3,
    containing_service=None,
    input_type=_EMPTY,
    output_type=_EMPTY,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_SERIALSERVER)

DESCRIPTOR.services_by_name['SerialServer'] = _SERIALSERVER

# @@protoc_insertion_point(module_scope)
